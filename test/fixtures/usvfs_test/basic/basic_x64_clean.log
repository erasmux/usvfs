Updating VFS mappings:
  mapdir: source:mod1 => mount:mod1
  mapdir: source:mod2 => mount:mod2
  mapdir: source:mod3 => mount:mod3
  mapdir: source:mod4 => mount:mod4
  mapdircreate: source:overwrite => mount:overwrite
  mapfile: source:root1.txt => mount:root1.txt
  mapfile: source:root2.txt => mount:root2.txt

running scenario basic:

Spawning: test_file_operations_x64.exe -basedir mount -cout+ basic_x64.log -r -listcontents mount:.

>> Listing directory {.}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[rfolder] DIR (attributes 0x10)
[root0.txt] FILE (attributes 0x20, 21 bytes)
== root0 original file
[root2.txt] FILE (attributes 0x20, 17 bytes)
== root2 source file
[root1.txt] FILE (attributes 0x20, 17 bytes)
== root1 source file
[overwrite] DIR (attributes 0x10)
[mod4] DIR (attributes 0x10)
[mod3] DIR (attributes 0x10)
[mod2] DIR (attributes 0x10)
[mod1] DIR (attributes 0x10)
>> Listing directory {rfolder}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[rfile0.txt] FILE (attributes 0x20, 34 bytes)
== rfolder\rfile0.txt original file
[rfileoldover.txt] FILE (attributes 0x20, 40 bytes)
== rfolder\rfileoldover.txt original file
[rfilerewrite.txt] FILE (attributes 0x20, 40 bytes)
== rfolder\rfilerewrite.txt original file
>> Listing directory {overwrite}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[.empty] FILE (attributes 0x20, 0 bytes)
>> Listing directory {mod4}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mod4rewrite.txt] FILE (attributes 0x20, 12 bytes)
== hello mod4
[mod4over.txt] FILE (attributes 0x20, 12 bytes)
== hello mod4
[mfolder4] DIR (attributes 0x10)
>> Listing directory {mod4\mfolder4}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder4\mfile.txt by mod4
>> Listing directory {mod3}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mod3.txt] FILE (attributes 0x20, 12 bytes)
== hello mod3
[mfolder4] DIR (attributes 0x10)
[mfolder3] DIR (attributes 0x10)
>> Listing directory {mod3\mfolder4}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder4\mfile.txt by mod3
>> Listing directory {mod3\mfolder3}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder3\mfile.txt by mod3
>> Listing directory {mod2}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mod2.txt] FILE (attributes 0x20, 12 bytes)
== hello mod2
[mfolder4] DIR (attributes 0x10)
[mfolder2] DIR (attributes 0x10)
>> Listing directory {mod2\mfolder4}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder4\mfile.txt by mod2
>> Listing directory {mod2\mfolder2}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder2\mfile.txt by mod2
>> Listing directory {mod1}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mod1.txt] FILE (attributes 0x20, 12 bytes)
== hello mod1
[mfolder3] DIR (attributes 0x10)
[mfolder1] DIR (attributes 0x10)
>> Listing directory {mod1\mfolder3}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder3\mfile.txt by mod1
>> Listing directory {mod1\mfolder1}:
[.] DIR (attributes 0x10)
[..] DIR (attributes 0x10)
[mfile.txt] FILE (attributes 0x20, 28 bytes)
== mfolder1\mfile.txt by mod1

scenario ended successfully!

postmortem check against original fixtures mount:
postmortem check successfull.
ERROR: output does not match gold output: basic_x64.log
